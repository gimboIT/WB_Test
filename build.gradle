plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "8.4"
}

group 'ru.wildberries'
version '1.0-SNAPSHOT'

allure{
    report {
        version.set("2.21.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.21.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}

compileTestJava{
    options.encoding='UTF-8'
}

repositories {
    mavenCentral()
    compileJava {
        options.encoding = 'UTF-8'
    }
}

dependencies {
    testImplementation(
            'org.junit.jupiter:junit-jupiter:5.9.2',
            'io.qameta.allure:allure-junit5:2.21.0',
            'io.qameta.allure:allure-selenide:2.21.0',
            'com.codeborne:selenide:6.19.1'
    )
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    systemProperties(System.getProperties())

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}